import snakemake
import sys
sys.path.append("/Users/rcarlson/Documents/GitHub/lasagna3/snakes")
import ops.firesnake
from ops.firesnake import Snake
import ops.io
from ops.io import read_stack, save_stack
from glob import glob
import numpy as np

###
###



WELLS =  ['B01','B02','C01','C01'] #
PLATES = ['M152/tifs']
SITES = [str(r).zfill(2) for r in range(20)]

rule all:
    input:
    # can request individual files here 
        expand('{plate}/process/Well{well}_site-{site}.mavs.csv', plate = PLATES, well = WELLS, site = SITES),


## SEGMENTATION
rule segment_nuclei:
    input:
        '{plate}/Well{well}_Site{site}.tif'
    output:
        ('{plate}/process/Well{well}_site-{site}.nuclei.tif')
    run:
        Snake.segment_nuclei(output=output, data=input[0], 
              threshold=.0017, area_min=3000, area_max=100000, radius = 150, smooth = 20) 


rule segment_cells:
    """segment_cells works best when fed data with the most cytoplasmic autofluorescence. SBS data is OK but
    not the best if something else is available.
    """
    input:
        '{plate}/Well{well}_Site{site}.tif',
        '{plate}/process/Well{well}_site-{site}.nuclei.tif'
    output:
        ('{plate}/process/Well{well}_site-{site}.cells.tif')
    run:
        Snake.segment_cells(output=output, 
            data=input[0], nuclei=input[1], threshold=2100/1e6, chstart = 2, chend = 3) #

rule extract_pheno_mavs:
    input:
        '{plate}/Well{well}_Site{site}.tif',
        '{plate}/process/Well{well}_site-{site}.nuclei.tif',
        '{plate}/process/Well{well}_site-{site}.cells.tif'

    output:
        ('{plate}/process/Well{well}_site-{site}.mavs.csv')
    run:
        Snake.extract_phenotype_extended_channel(output=output, 
             data_phenotype=input[0], nuclei=input[1], cells=input[2], cytoplasm=None, channel = 1, corrchannel1 = 2, wildcards=dict(wildcards))


rule extract_pheno_mito:
    input:
        '{plate}/Well{well}_Site{site}.tif',
        '{plate}/process/Well{well}_site-{site}.nuclei.tif',
        '{plate}/process/Well{well}_site-{site}.cells.tif'

    output:
        ('{plate}/process/Well{well}_site-{site}.mito.csv')
    run:
        Snake.extract_phenotype_extended_channel(output=output, 
             data_phenotype=input[0], nuclei=input[1], cells=input[2], cytoplasm=None, channel = 2, corrchannel1 = 1, wildcards=dict(wildcards))

